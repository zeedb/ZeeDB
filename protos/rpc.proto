syntax = "proto2";

package rpc;

service Coordinator {
  rpc Submit (SubmitRequest) returns (stream Page) {}
}

message SubmitRequest {
  required string sql = 1;
  map<string, bytes> variables = 2;
}

service Worker {
  rpc Broadcast (BroadcastRequest) returns (stream Page) {}
  rpc Exchange (ExchangeRequest) returns (stream Page) {}
  rpc ApproxCardinality (ApproxCardinalityRequest) returns (ApproxCardinalityResponse) {}
  rpc ColumnStatistics (ColumnStatisticsRequest) returns (ColumnStatisticsResponse) {}
}

message BroadcastRequest {
  required bytes expr = 1;
  map<string, bytes> variables = 2;
  required int64 txn = 3;
  required int32 listeners = 4;
}

message ExchangeRequest {
  required bytes expr = 1;
  map<string, bytes> variables = 2;
  required int64 txn = 3;
  required int32 listeners = 4;
  required string hash_column = 5;
  required int32 hash_bucket = 6;
}

message Page {
  oneof result {
    bytes record_batch = 1;
    string sql_error = 2;
  }
}

message ApproxCardinalityRequest {
  required int64 table_id = 1;
}

message ApproxCardinalityResponse {
  required double cardinality = 1;
}

message ColumnStatisticsRequest {
  required int64 table_id = 1;
  required string column_name = 2;
}

message ColumnStatisticsResponse {
  optional bytes statistics = 1;
}