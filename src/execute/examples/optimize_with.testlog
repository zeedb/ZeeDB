
# redundant_with_clause_with_projection
plan: with foo as (select customer_id, current_date() as r from customer) select customer_id, r from foo
Map foo.customer_id:customer.customer_id foo.r:(CurrentDate)
	Filter* (LessOrEqual $xmin (Xid)) (Less (Xid) $xmax)
		Map* customer.customer_id $xmin $xmax
			SeqScan customer

# redundant_with_clause
plan: with foo as (select * from customer) select customer_id from foo
Map foo.customer_id:customer.customer_id
	Filter* (LessOrEqual $xmin (Xid)) (Less (Xid) $xmax)
		Map* customer.customer_id customer.person_id customer.store_id customer.account_number customer.modified_date $xmin $xmax
			SeqScan customer

# remove_with
plan: with foo as (select * from customer) select * from foo
Map foo.customer_id:customer.customer_id foo.person_id:customer.person_id foo.store_id:customer.store_id foo.account_number:customer.account_number foo.modified_date:customer.modified_date
	Filter* (LessOrEqual $xmin (Xid)) (Less (Xid) $xmax)
		Map* customer.customer_id customer.person_id customer.store_id customer.account_number customer.modified_date $xmin $xmax
			SeqScan customer

# unused_with
plan: with foo as (select 1 as a) select 2 as b
Map $query.b:2
	TableFreeScan

# use_with_clause_twice
plan: with foo as (select customer_id, store_id from customer) select f1.customer_id, f2.customer_id from foo f1, foo f2 where f1.store_id = f2.store_id
Script
	CreateTempTable foo customer_id INT64 store_id INT64
		Filter* (LessOrEqual $xmin (Xid)) (Less (Xid) $xmax)
			Map* customer.customer_id customer.store_id $xmin $xmax
				SeqScan customer
	Map foo.customer_id foo.customer_id
		HashJoin Inner (Equal foo.store_id foo.store_id)
			Partition* foo.store_id
				GetTempTable foo
			Partition* foo.store_id
				GetTempTable foo

# use_with_project_twice
plan: with foo as (select *, current_date() as r from customer) select f1.customer_id, f2.customer_id from foo f1, foo f2 where f1.r = f2.r
Script
	CreateTempTable foo customer_id INT64 person_id INT64 store_id INT64 account_number INT64 modified_date TIMESTAMP r DATE
		Map foo.r:(CurrentDate) customer.customer_id customer.person_id customer.store_id customer.account_number customer.modified_date
			Filter* (LessOrEqual $xmin (Xid)) (Less (Xid) $xmax)
				Map* customer.customer_id customer.person_id customer.store_id customer.account_number customer.modified_date $xmin $xmax
					SeqScan customer
	Map foo.customer_id foo.customer_id
		HashJoin Inner (Equal foo.r foo.r)
			Partition* foo.r
				GetTempTable foo
			Partition* foo.r
				GetTempTable foo

# use_with_select_star_twice
plan: with foo as (select * from customer) select f1.customer_id, f2.customer_id from foo f1, foo f2 where f1.store_id = f2.store_id
Script
	CreateTempTable foo customer_id INT64 person_id INT64 store_id INT64 account_number INT64 modified_date TIMESTAMP
		Filter* (LessOrEqual $xmin (Xid)) (Less (Xid) $xmax)
			Map* customer.customer_id customer.person_id customer.store_id customer.account_number customer.modified_date $xmin $xmax
				SeqScan customer
	Map foo.customer_id foo.customer_id
		HashJoin Inner (Equal foo.store_id foo.store_id)
			Partition* foo.store_id
				GetTempTable foo
			Partition* foo.store_id
				GetTempTable foo

