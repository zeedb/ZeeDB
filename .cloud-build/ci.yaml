steps:
  - name: gcr.io/cloud-builders/docker
    id: zetasql-server
    waitFor: ['-']
    args: ['run', '-d', '--network=cloudbuild', '--name=zetasql', 'gcr.io/$PROJECT_ID/zetasql']
  - name: gcr.io/kaniko-project/executor
    id: zeedb-builder
    waitFor: ['-']
    args:
      - --dockerfile=.cloud-build/Dockerfile.build
      - --destination=gcr.io/$PROJECT_ID/zeedb-builder
      - --cache=true
  - name: gcr.io/$PROJECT_ID/zeedb-builder
    id: test
    waitFor: [zeedb-builder]
    entrypoint: sh
    args: [-c, 'cargo test -Z timings && sccache --show-stats']
artifacts:
  objects:
    location: gs://zeedb-build-artifacts
    paths: ['cargo-timing.html']
options:
  env:
    - RUSTC_WRAPPER=sccache
    - CMAKE_C_COMPILER_LAUNCHER=sccache
    - CMAKE_CXX_COMPILER_LAUNCHER=sccache
    - SCCACHE_GCS_BUCKET=zeedb-build-cache
    - SCCACHE_GCS_OAUTH_URL=http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/697461006037@cloudbuild.gserviceaccount.com/token
    - SCCACHE_GCS_RW_MODE=READ_WRITE
    - CARGO_INCREMENTAL=0
    - CARGO_BUILD_TARGET=x86_64-unknown-linux-gnu
    - NO_RUSTFMT=1
    - ZETASQL=http://zetasql:50051
    # - SCCACHE_LOG=debug # sccache verbose logging.
    # - VERBOSE=1 # cmake verbose logging.
    # cargo argument -v or -vv enables verbose and very-verbose logging.