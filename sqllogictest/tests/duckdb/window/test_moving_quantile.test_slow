# name: test/sql/window/test_moving_quantile.test_slow
# description: Moving quantile performance
# group: [window]

require vector_size 512

# Integer benchmark tables
statement ok
create table rank100 as
    select b % 100 as a, b
    from (
        select * from range(0, 10000000) tbl(b)
    ) q;

#   Fixed continuous single
statement ok
prepare fixed_median as
select sum(m)
from (
    select median(a) over (
        order by b asc
        rows between cast(?1 as integer) preceding and current row) as m
    from rank100
    ) q;

#   Variable continuous single
statement ok
prepare variable_median as
select sum(m)
from (
    select median(a) over (
        order by b asc
        rows between mod(b * cast(?1 as integer), cast(?2 as integer)) preceding
                 and cast(?3 as integer) - mod(b * cast(?1 as integer), cast(?2 as integer)) following
        ) as m
    from rank100
    ) q;

#   Fixed discrete list
statement ok
prepare fixed_disc_iqr as
select min(iqr), max(iqr)
from (
    select quantile_disc(a, [0.25, 0.5, 0.75]) over (
        order by b asc
        rows between cast(?1 as integer) preceding and current row) as iqr
    from rank100
    ) q;

#   Variable discrete list
statement ok
prepare variable_disc_iqr as
select min(iqr), max(iqr)
from (
    select quantile_disc(a, [0.25, 0.5, 0.75]) over (
        order by b asc
        rows between mod(b * cast(?1 as integer), cast(?2 as integer)) preceding
                 and cast(?3 as integer) - mod(b * cast(?1 as integer), cast(?2 as integer)) following
        )
        as iqr
    from rank100
    ) q;

#   Fixed continuous list
statement ok
prepare fixed_cont_iqr as
select min(iqr), max(iqr)
from (
    select quantile_cont(a, [0.25, 0.5, 0.75]) over (
        order by b asc
        rows between cast(?1 as integer) preceding and current row) as iqr
    from rank100
    ) q;

# Checksum the queries
query I
execute fixed_median(100)
----
494997500

query I
execute variable_median(47, 511, 100)
----
494989867

query II
execute fixed_disc_iqr(97)
----
[0, 0, 0]	[26, 50, 74]

query II
execute variable_disc_iqr(47, 511, 97)
----
[0, 0, 0]	[70, 80, 89]

query II
execute fixed_cont_iqr(97)
----
[0.000000, 0.000000, 0.000000]	[26.250000, 50.500000, 74.750000]
