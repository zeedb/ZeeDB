# name: test/sql/copy/parquet/test_parquet_write_complex.test
# description: Parquet read and re-write various files
# group: [parquet]

require parquet

# writer requires vector_size >= 64
require vector_size 64

# alltypes_dictionary: scan as parquet
query I nosort alltypes_dictionary
SELECT * FROM parquet_scan('data/parquet-testing/arrow/alltypes_dictionary.parquet');
----

# rewrite the file
statement ok
COPY (SELECT * FROM parquet_scan('data/parquet-testing/arrow/alltypes_dictionary.parquet')) TO '__TEST_DIR__/alltypes_dictionary.parquet' (FORMAT 'PARQUET')

# verify that the rewritten file has the same values again
query I nosort alltypes_dictionary
SELECT * FROM parquet_scan('__TEST_DIR__/alltypes_dictionary.parquet');
----

# bug687_nulls.parquet
query I nosort bug687_nulls
SELECT * FROM parquet_scan('data/parquet-testing/bug687_nulls.parquet') LIMIT 10;
----

statement ok
COPY (SELECT * FROM parquet_scan('data/parquet-testing/bug687_nulls.parquet')) TO '__TEST_DIR__/bug687_nulls.parquet' (FORMAT 'PARQUET')

query I nosort bug687_nulls
SELECT * FROM parquet_scan('__TEST_DIR__/bug687_nulls.parquet') LIMIT 10;
----

# userdata1.parquet
query I nosort userdata1.parquet
SELECT * FROM parquet_scan('data/parquet-testing/userdata1.parquet') ORDER BY 1 LIMIT 10;
----

statement ok
COPY (SELECT * FROM parquet_scan('data/parquet-testing/userdata1.parquet')) TO '__TEST_DIR__/userdata1.parquet' (FORMAT 'PARQUET')

query I nosort userdata1.parquet
SELECT * FROM parquet_scan('__TEST_DIR__/userdata1.parquet') ORDER BY 1 LIMIT 10;
----

# gzip codec
statement ok
COPY (SELECT * FROM parquet_scan('data/parquet-testing/userdata1.parquet')) TO '__TEST_DIR__/userdata1-gzip.parquet' (FORMAT 'PARQUET', CODEC 'GZIP')

query I nosort userdata1.parquet
SELECT * FROM parquet_scan('__TEST_DIR__/userdata1-gzip.parquet') ORDER BY 1 LIMIT 10;
----

# uncompressed codec
statement ok
COPY (SELECT * FROM parquet_scan('data/parquet-testing/userdata1.parquet')) TO '__TEST_DIR__/userdata1-uncompressed.parquet' (FORMAT 'PARQUET', CODEC 'UNCOMPRESSED')

query I nosort userdata1.parquet
SELECT * FROM parquet_scan('__TEST_DIR__/userdata1-uncompressed.parquet') ORDER BY 1 LIMIT 10;
----

# zstd codec
statement ok
COPY (SELECT * FROM parquet_scan('data/parquet-testing/userdata1.parquet')) TO '__TEST_DIR__/userdata1-zstd.parquet' (FORMAT 'PARQUET', CODEC 'ZSTD')

query I nosort userdata1.parquet
SELECT * FROM parquet_scan('__TEST_DIR__/userdata1-zstd.parquet') ORDER BY 1 LIMIT 10;
----
