< create table integers (i int64);
< insert into integers values (1), (2), (3), (null);
# correlated expression in subquery
> SELECT i, (SELECT s1.i FROM (SELECT * FROM integers WHERE i=i1.i) s1) AS j FROM integers i1 ORDER BY i;
i    j   
NULL NULL
1    1   
2    2   
3    3   

# join on two subqueries that both have a correlated expression in them
> SELECT i, (SELECT s1.i FROM (SELECT i FROM integers WHERE i=i1.i) s1 INNER JOIN (SELECT i FROM integers WHERE i=4-i1.i) s2 ON s1.i>s2.i) AS j FROM integers i1 ORDER BY i;
i    j   
NULL NULL
1    NULL
2    NULL
3    3   

# implicit join with correlated expression in filter
> SELECT i, (SELECT s1.i FROM integers s1, integers s2 WHERE s1.i=s2.i AND s1.i=4-i1.i) AS j FROM integers i1 ORDER BY i;
i    j   
NULL NULL
1    3   
2    2   
3    1   

# join with a correlated expression in the join condition
> SELECT i, (SELECT s1.i FROM integers s1 INNER JOIN integers s2 ON s1.i=s2.i AND s1.i=4-i1.i) AS j FROM integers i1 ORDER BY i;
i    j   
NULL NULL
1    3   
2    2   
3    1   

# inner join on correlated subquery
> SELECT * FROM integers s1 INNER JOIN integers s2 ON (SELECT 2*SUM(i)*s1.i FROM integers)=(SELECT SUM(i)*s2.i FROM integers) ORDER BY s1.i;
i i
1 2

# inner join on non-equality subquery
> SELECT * FROM integers s1 INNER JOIN integers s2 ON (SELECT s1.i=s2.i) ORDER BY s1.i;
i i
1 1
2 2
3 3

> SELECT * FROM integers s1 INNER JOIN integers s2 ON (SELECT s1.i=i FROM integers WHERE s2.i=i) ORDER BY s1.i;
i i
1 1
2 2
3 3

# union with correlated expression
> SELECT i, EXISTS (SELECT i FROM integers WHERE i=i1.i UNION ALL SELECT i FROM integers WHERE i=i1.i) AS j FROM integers i1 ORDER BY i;
i    j    
NULL false
1    true 
2    true 
3    true 

# uncorrelated query inside correlated query
> SELECT i, (SELECT (SELECT SUM(i) FROM integers)+42+i1.i) AS j FROM integers i1 ORDER BY i;
i    j   
NULL NULL
1    49  
2    50  
3    51  

